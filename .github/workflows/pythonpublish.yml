name: Upload Python Package

on:
  release:
    types:
      - released
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
     - RELEASE_3_*_*

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]
        r-version: [release]
        os: [ubuntu-latest, macOS-latest, windows-2019]
        exclude:
        - python-version: 3.8
          os: windows-2019 
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up R ${{ matrix.r-version }}
      uses: r-lib/actions/setup-r@master
      with:
        r-version: ${{ matrix.r-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel twine
    - name: Build wheel
      run: |
        python setup.py bdist_wheel
    - name: Build sdist
      if: (matrix.r-version == '4.0' && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8')
      run: |
        python setup.py sdist
    - id: getfilename_wheel
      run: |
        echo "::set-output name=file::$(basename -a $(ls dist/*.whl))"
    - id: getfilename_targz
      if: (matrix.r-version == '4.0' && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8')
      run: |
        echo "::set-output name=file::$(basename -a $(ls dist/*.tar.gz))"
    - name: Create package for master
      uses: actions/upload-artifact@v1
      if: (github.event_name == 'pull_request' || github.event_name == 'push') && matrix.r-version == '4.0'
      with:
          name: ${{ steps.getfilename_wheel.outputs.file }}
          path: dist/${{ steps.getfilename_wheel.outputs.file }}
    - name: Create source package for master
      uses: actions/upload-artifact@v1
      if: (github.event_name == 'pull_request' || github.event_name == 'push') && (matrix.r-version == '4.0' && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8')
      with:
          name: ${{ steps.getfilename_targz.outputs.file }}
          path: dist/${{ steps.getfilename_targz.outputs.file }}
    - name: Publish
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        echo 'Uploading to pypi'
        echo $(ls dist/*)
        # twine upload dist/*
