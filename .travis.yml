language: python

compiler:
  - gcc
  - clang

cache:
  - packages
  - pip

jobs:
  allow_failures:
    - os: osx
  include:
    - os: linux
      dist: xenial
      python: 3.7
      env: RPY2_CFFI_MODE=ABI
    - os: linux
      dist: xenial
      python: 3.7
      env: RPY2_CFFI_MODE=API
    - os: linux
      dist: xenial
      python: 3.8
      env: RPY2_CFFI_MODE=ABI
    - os: linux
      dist: xenial
      python: 3.8
      env: RPY2_CFFI_MODE=API
    - os: osx
      language: generic
      env: RPY2_CFFI_MODE=ABI
    - os: osx
      language: generic
      env: RPY2_CFFI_MODE=API

addons:
  apt:
    update: true
    packages:
      - lsb-release
  homebrew:
    packages:
      - llvm
    update: true

before_install:
  - |
    if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      # Install from latest CRAN binary build for OS X
      wget https://cloud.r-project.org/bin/macosx/R-latest.pkg -O /tmp/R-latest.pkg
      echo "Installing OS X binary package for R"
      sudo installer -pkg "/tmp/R-latest.pkg" -target /
      rm "/tmp/R-latest.pkg"
      brew upgrade python3
      python3 -m venv py3_env 
      source py3_env/bin/activate
    else
      sudo apt-key adv \
        --keyserver keyserver.ubuntu.com \
        --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
      sudo add-apt-repository \
        --yes \
        "deb https://cloud.r-project.org/bin/linux/ubuntu/ $(lsb_release -c -s)-cran35/"
      cat /etc/apt/sources.list
      sudo apt-get update -qq
      sudo apt-get install -y r-base
      if [[ $RPY2_CFFI_MODE == 'API' ]]; then
        sudo apt-get install -y r-base-dev
      fi
    fi
  - |
    sudo Rscript ./install_r_packages.r dplyr ggplot2 lazyeval tidyr
    pip install -U flake8 pytest codecov pytest-cov
    pip install -U ipython tzlocal

install:
  - python rpy2/situation.py
  - python setup.py install
  - pip uninstall -y rpy2
  - python setup.py clean
  - python setup.py build --force sdist
  - pip install $(ls -t1 dist/*.tar.gz | head)

# command to run tests
script:
  - ./scripts/run_linting.sh
  - ./scripts/run_tests.sh

after_success:
  - codecov

deploy:
  provider: releases
  api_key:
    secure: 
  file: "FILE"
  skip_cleanup: true
  on:
    tags: true
